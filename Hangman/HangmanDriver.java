import java.util.*;

public class HangmanDriver {
	//Initializes variables
	static Scanner scan = new Scanner(System.in);
	static char[] word;								//stores random word generated by program
	static char[] cword = new char[7];				//stores word guessed by user
	static Hangman game = new Hangman();			//new instance of the hangman class
	static char playagain;						   //stores if user wants to play again
	
	public static void main(String[]args){
		welcome();
		
		//Loop for game, runs insofar as user wants to play again
		do{
			game.reset(cword);
			word = game.getGameWord();
			
			gameplay();			
			conclusion();
			playagain = playagain();
			
		} while(((playagain == 'y') || (playagain == 'Y')));
		
		System.out.println("Goodbye!");
	}
	
	//Runs game and calls necessary methods
	public static void gameplay(){
		
		while((game.getIncorrectGuesses() <= 10) && (!wordequals())){ 
			
			getGuess();
			System.out.print("Word: ");
			
			/*Displays correct word user guessed phrase correctly
			  ciguesses() method returns 250 only if user guesses phrase correctly*/ 
			if(game.getIncorrectGuesses() == 250)
				showCword(word);
			else
				showCword(cword);
			
			game.showMan(game.getIncorrectGuesses());
			System.out.println("Incorrect guesses: " + game.sIguesses());
		}
	}
	
	//Gets user's guess(letter or phrase) and passes it to appropriate method
	public static void getGuess(){
		char guess;			//stores user's guess(letter)
		String pGuess;		//stores user's guess(phrase)
		
		System.out.println("Type L to guess a letter or P to guess a phrase:");
		guess = scan.next().charAt(0);
		
		if (Character.toUpperCase(guess) == 'L'){
			
			System.out.println("Enter your guess(as a single letter) :");
			guess = scan.next().charAt(0);
			
			//Returns 1 if letter is in word, 0 if letter is not in word
			int check = game.guessL(Character.toLowerCase(guess),cword,word); 
			
			if (check == 1){
				System.out.println("Correct!");
				System.out.println();
			}
			else{
				System.out.println("Incorrect!");
				System.out.println();
			}
		}
		
		else if (Character.toUpperCase(guess) == 'P'){
			
			System.out.println("Enter your guess(as a phrase) :");
			pGuess = scan.next();
			pGuess = pGuess.toUpperCase();
			
			int check = game.guessP(pGuess,word,cword); //Returns 0 if phrase is equal to word
			
			if (check == 1)
				System.out.println("Incorrect!");
		}
		else
			System.out.println("Invalid choice, incorrect answer.");
	}
	
	//Shows appropriate message when game ends
	public static void conclusion(){
		
		//getIncorrect guesses returns 250 only if user guesses correct word
		if(game.getIncorrectGuesses() == 250){
			System.out.print("Congratulations!, the word is ");
			showCword(word);
			System.out.println();
		}
		
		//getIncorrectGuesses returns 11 only if user makes 10 wrong guesses
		else if(game.getIncorrectGuesses() == 11){
			System.out.println("You have been hung!" + '\n' + "Game over!");
			System.out.print("The correct word is ");
			showCword(word);
			System.out.println();
		}
		else{
			System.out.print("Congratulations!, the word is ");
			showCword(word);
			System.out.println();
		}		
	}
	
	//Checks if user wants to play again
	public static char playagain(){
		System.out.println("Play again: Yes(Y) or No(N)");
		playagain = scan.next().charAt(0);
		return playagain;
	}
	
	//Checks if user has guessed random word
	public static boolean wordequals(){
		
		boolean checkword = false;
		
		//changing to string allows comparison of cword and word
		String wordz = new String(word);
		String cwordz = new String(cword);
			
			//checks if guessed word is equal to random word
			if (wordz.equals(cwordz))
				checkword = true;
			
		return checkword;
	}
	
	//Shows welcome message
	public static void welcome(){
		System.out.println("Welcome to Hangman!" + '\n' + '\n' + "Generating your secret phrase...");
		System.out.println("Here is your phrase:" + '\n' + "_______");
		game.showMan(0);
		System.out.println("Incorrect Guesses: " + '\n');
	}
	
	//Shows current word, accounting for user's guesses
	public static void showCword(char[] cword){
		//Displays word, as guessed by user so far
		for(int i = 0; i < 7;i++){
			String cwordz = Character.toString(cword[i]); //converts cword element to string 
			System.out.print(cwordz.toUpperCase()); //displays cword in uppercase
		}	
			System.out.println();
	}
	
}
